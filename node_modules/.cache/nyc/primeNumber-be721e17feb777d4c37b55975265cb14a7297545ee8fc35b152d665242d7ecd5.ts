"use strict";function cov_3nyy0i00l(){var path="/home/usuario/modificaci-nPE102-28-03/src/primeNumber.ts";var hash="3056f2248260bea031a2020edfd6ef170735e93b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/usuario/modificaci-nPE102-28-03/src/primeNumber.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:29}},"2":{start:{line:18,column:8},end:{line:20,column:9}},"3":{start:{line:19,column:12},end:{line:19,column:56}},"4":{start:{line:21,column:8},end:{line:21,column:39}},"5":{start:{line:29,column:21},end:{line:29,column:23}},"6":{start:{line:30,column:8},end:{line:39,column:9}},"7":{start:{line:30,column:21},end:{line:30,column:22}},"8":{start:{line:31,column:26},end:{line:31,column:30}},"9":{start:{line:32,column:12},end:{line:36,column:13}},"10":{start:{line:32,column:25},end:{line:32,column:26}},"11":{start:{line:33,column:16},end:{line:35,column:17}},"12":{start:{line:34,column:20},end:{line:34,column:36}},"13":{start:{line:37,column:12},end:{line:38,column:31}},"14":{start:{line:38,column:16},end:{line:38,column:31}},"15":{start:{line:40,column:8},end:{line:40,column:22}},"16":{start:{line:49,column:21},end:{line:49,column:23}},"17":{start:{line:50,column:8},end:{line:51,column:20}},"18":{start:{line:51,column:12},end:{line:51,column:20}},"19":{start:{line:52,column:8},end:{line:61,column:9}},"20":{start:{line:52,column:21},end:{line:52,column:24}},"21":{start:{line:53,column:26},end:{line:53,column:30}},"22":{start:{line:54,column:12},end:{line:58,column:13}},"23":{start:{line:54,column:25},end:{line:54,column:26}},"24":{start:{line:55,column:16},end:{line:57,column:17}},"25":{start:{line:56,column:20},end:{line:56,column:36}},"26":{start:{line:59,column:12},end:{line:60,column:31}},"27":{start:{line:60,column:16},end:{line:60,column:31}},"28":{start:{line:62,column:8},end:{line:62,column:22}},"29":{start:{line:65,column:0},end:{line:65,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:18},end:{line:11,column:21}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:4},end:{line:17,column:5}},loc:{start:{line:17,column:28},end:{line:22,column:5}},line:17},"2":{name:"(anonymous_2)",decl:{start:{line:28,column:4},end:{line:28,column:5}},loc:{start:{line:28,column:21},end:{line:41,column:5}},line:28},"3":{name:"(anonymous_3)",decl:{start:{line:48,column:4},end:{line:48,column:5}},loc:{start:{line:48,column:20},end:{line:63,column:5}},line:48}},branchMap:{"0":{loc:{start:{line:18,column:8},end:{line:20,column:9}},type:"if",locations:[{start:{line:18,column:8},end:{line:20,column:9}},{start:{line:18,column:8},end:{line:20,column:9}}],line:18},"1":{loc:{start:{line:33,column:16},end:{line:35,column:17}},type:"if",locations:[{start:{line:33,column:16},end:{line:35,column:17}},{start:{line:33,column:16},end:{line:35,column:17}}],line:33},"2":{loc:{start:{line:37,column:12},end:{line:38,column:31}},type:"if",locations:[{start:{line:37,column:12},end:{line:38,column:31}},{start:{line:37,column:12},end:{line:38,column:31}}],line:37},"3":{loc:{start:{line:50,column:8},end:{line:51,column:20}},type:"if",locations:[{start:{line:50,column:8},end:{line:51,column:20}},{start:{line:50,column:8},end:{line:51,column:20}}],line:50},"4":{loc:{start:{line:55,column:16},end:{line:57,column:17}},type:"if",locations:[{start:{line:55,column:16},end:{line:57,column:17}},{start:{line:55,column:16},end:{line:57,column:17}}],line:55},"5":{loc:{start:{line:59,column:12},end:{line:60,column:31}},type:"if",locations:[{start:{line:59,column:12},end:{line:60,column:31}},{start:{line:59,column:12},end:{line:60,column:31}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},inputSourceMap:{version:3,file:"/home/usuario/modificaci-nPE102-28-03/src/primeNumber.ts",sources:["/home/usuario/modificaci-nPE102-28-03/src/primeNumber.ts"],names:[],mappings:";;;AAAA;;GAEG;AACH,MAAa,WAAW;IAIpB;;OAEG;IACH,gBAAuB,CAAC;IAExB;;;;OAIG;IACI,MAAM,CAAC,cAAc;QACxB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAC5B,WAAW,CAAC,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC;SAC7C;QACD,OAAO,WAAW,CAAC,WAAW,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,GAAW;QAC1B,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAElC,IAAI,OAAO,GAAY,IAAI,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;oBACZ,OAAO,GAAG,KAAK,CAAC;iBACnB;aACJ;YAED,IAAG,OAAO;gBAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAED;;;;;OAKG;IACI,KAAK,CAAC,GAAW,EAAE,GAAW;QACjC,IAAI,MAAM,GAAa,EAAE,CAAC;QAE1B,IAAI,GAAG,GAAG,CAAC;YAAE,GAAG,GAAG,CAAC,CAAC;QAErB,KAAK,IAAI,CAAC,GAAW,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAEpC,IAAI,OAAO,GAAY,IAAI,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;gBACxB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC;oBACZ,OAAO,GAAG,KAAK,CAAC;iBACnB;aACJ;YAED,IAAG,OAAO;gBAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;CACJ;AAnED,kCAmEC",sourcesContent:["/**\n * Clase para manejar n\xFAmeros primos\n */\nexport class primeNumber {\n\n    private static primeNumber: primeNumber;\n    \n    /**\n     * Constructor privado para seguir el patr\xF3n singleton\n     */\n    private constructor() {}\n\n    /**\n     * Si la clase aun no se ha instanciado, se llama al constructor, si no se devuelve\n     * la instancia ya creada para preservar el patr\xF3n singleton\n     * @returns \n     */\n    public static getPrimeNumber(): primeNumber {\n        if (!primeNumber.primeNumber) {\n          primeNumber.primeNumber = new primeNumber();\n        }\n        return primeNumber.primeNumber;\n    }\n\n    /**\n     * Devuelve un array con los primeros n\xFAmeros primos hasta max\n     * @param max \n     * @returns \n     */\n    public firstPrimes(max: number): number[] {\n        let result: number[] = [];\n\n        for (let i: number = 2; i < max; ++i) {\n\n            let isPrime: boolean = true;\n            for (let j = 2; j < i; ++j) {\n                if (i % j === 0){\n                    isPrime = false;\n                }\n            }\n\n            if(isPrime)  result.push(i); \n        }\n        return result;\n    }\n\n    /**\n     * Devuelve un array con los n\xFAmeros primos entre min y max\n     * @param min \n     * @param max \n     * @returns \n     */\n    public range(min: number, max: number) {\n        let result: number[] = [];\n\n        if (min < 2) min = 2;\n\n        for (let i: number = min; i < max; ++i) {\n\n            let isPrime: boolean = true;\n            for (let j = 2; j < i; ++j) {\n                if (i % j === 0){\n                    isPrime = false;\n                }\n            }\n\n            if(isPrime)  result.push(i); \n        }\n        return result;\n    }\n}\n"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"3056f2248260bea031a2020edfd6ef170735e93b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_3nyy0i00l=function(){return actualCoverage;};}return actualCoverage;}cov_3nyy0i00l();cov_3nyy0i00l().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_3nyy0i00l().s[1]++;exports.primeNumber=void 0;/**
 * Clase para manejar números primos
 */class primeNumber{/**
     * Constructor privado para seguir el patrón singleton
     */constructor(){cov_3nyy0i00l().f[0]++;}/**
     * Si la clase aun no se ha instanciado, se llama al constructor, si no se devuelve
     * la instancia ya creada para preservar el patrón singleton
     * @returns
     */static getPrimeNumber(){cov_3nyy0i00l().f[1]++;cov_3nyy0i00l().s[2]++;if(!primeNumber.primeNumber){cov_3nyy0i00l().b[0][0]++;cov_3nyy0i00l().s[3]++;primeNumber.primeNumber=new primeNumber();}else{cov_3nyy0i00l().b[0][1]++;}cov_3nyy0i00l().s[4]++;return primeNumber.primeNumber;}/**
     * Devuelve un array con los primeros números primos hasta max
     * @param max
     * @returns
     */firstPrimes(max){cov_3nyy0i00l().f[2]++;let result=(cov_3nyy0i00l().s[5]++,[]);cov_3nyy0i00l().s[6]++;for(let i=(cov_3nyy0i00l().s[7]++,2);i<max;++i){let isPrime=(cov_3nyy0i00l().s[8]++,true);cov_3nyy0i00l().s[9]++;for(let j=(cov_3nyy0i00l().s[10]++,2);j<i;++j){cov_3nyy0i00l().s[11]++;if(i%j===0){cov_3nyy0i00l().b[1][0]++;cov_3nyy0i00l().s[12]++;isPrime=false;}else{cov_3nyy0i00l().b[1][1]++;}}cov_3nyy0i00l().s[13]++;if(isPrime){cov_3nyy0i00l().b[2][0]++;cov_3nyy0i00l().s[14]++;result.push(i);}else{cov_3nyy0i00l().b[2][1]++;}}cov_3nyy0i00l().s[15]++;return result;}/**
     * Devuelve un array con los números primos entre min y max
     * @param min
     * @param max
     * @returns
     */range(min,max){cov_3nyy0i00l().f[3]++;let result=(cov_3nyy0i00l().s[16]++,[]);cov_3nyy0i00l().s[17]++;if(min<2){cov_3nyy0i00l().b[3][0]++;cov_3nyy0i00l().s[18]++;min=2;}else{cov_3nyy0i00l().b[3][1]++;}cov_3nyy0i00l().s[19]++;for(let i=(cov_3nyy0i00l().s[20]++,min);i<max;++i){let isPrime=(cov_3nyy0i00l().s[21]++,true);cov_3nyy0i00l().s[22]++;for(let j=(cov_3nyy0i00l().s[23]++,2);j<i;++j){cov_3nyy0i00l().s[24]++;if(i%j===0){cov_3nyy0i00l().b[4][0]++;cov_3nyy0i00l().s[25]++;isPrime=false;}else{cov_3nyy0i00l().b[4][1]++;}}cov_3nyy0i00l().s[26]++;if(isPrime){cov_3nyy0i00l().b[5][0]++;cov_3nyy0i00l().s[27]++;result.push(i);}else{cov_3nyy0i00l().b[5][1]++;}}cov_3nyy0i00l().s[28]++;return result;}}cov_3nyy0i00l().s[29]++;exports.primeNumber=primeNumber;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL2hvbWUvdXN1YXJpby9tb2RpZmljYWNpLW5QRTEwMi0yOC0wMy9zcmMvcHJpbWVOdW1iZXIudHMiLCJzb3VyY2VzIjpbIi9ob21lL3VzdWFyaW8vbW9kaWZpY2FjaS1uUEUxMDItMjgtMDMvc3JjL3ByaW1lTnVtYmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOztHQUVHO0FBQ0gsTUFBYSxXQUFXO0lBSXBCOztPQUVHO0lBQ0gsZ0JBQXVCLENBQUM7SUFFeEI7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxjQUFjO1FBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxFQUFFO1lBQzVCLFdBQVcsQ0FBQyxXQUFXLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztTQUM3QztRQUNELE9BQU8sV0FBVyxDQUFDLFdBQVcsQ0FBQztJQUNuQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFdBQVcsQ0FBQyxHQUFXO1FBQzFCLElBQUksTUFBTSxHQUFhLEVBQUUsQ0FBQztRQUUxQixLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFO1lBRWxDLElBQUksT0FBTyxHQUFZLElBQUksQ0FBQztZQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFO2dCQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFDO29CQUNaLE9BQU8sR0FBRyxLQUFLLENBQUM7aUJBQ25CO2FBQ0o7WUFFRCxJQUFHLE9BQU87Z0JBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvQjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLEtBQUssQ0FBQyxHQUFXLEVBQUUsR0FBVztRQUNqQyxJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7UUFFMUIsSUFBSSxHQUFHLEdBQUcsQ0FBQztZQUFFLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFFckIsS0FBSyxJQUFJLENBQUMsR0FBVyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRTtZQUVwQyxJQUFJLE9BQU8sR0FBWSxJQUFJLENBQUM7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRTtnQkFDeEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBQztvQkFDWixPQUFPLEdBQUcsS0FBSyxDQUFDO2lCQUNuQjthQUNKO1lBRUQsSUFBRyxPQUFPO2dCQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDL0I7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0NBQ0o7QUFuRUQsa0NBbUVDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDbGFzZSBwYXJhIG1hbmVqYXIgbsO6bWVyb3MgcHJpbW9zXG4gKi9cbmV4cG9ydCBjbGFzcyBwcmltZU51bWJlciB7XG5cbiAgICBwcml2YXRlIHN0YXRpYyBwcmltZU51bWJlcjogcHJpbWVOdW1iZXI7XG4gICAgXG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0b3IgcHJpdmFkbyBwYXJhIHNlZ3VpciBlbCBwYXRyw7NuIHNpbmdsZXRvblxuICAgICAqL1xuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7fVxuXG4gICAgLyoqXG4gICAgICogU2kgbGEgY2xhc2UgYXVuIG5vIHNlIGhhIGluc3RhbmNpYWRvLCBzZSBsbGFtYSBhbCBjb25zdHJ1Y3Rvciwgc2kgbm8gc2UgZGV2dWVsdmVcbiAgICAgKiBsYSBpbnN0YW5jaWEgeWEgY3JlYWRhIHBhcmEgcHJlc2VydmFyIGVsIHBhdHLDs24gc2luZ2xldG9uXG4gICAgICogQHJldHVybnMgXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBnZXRQcmltZU51bWJlcigpOiBwcmltZU51bWJlciB7XG4gICAgICAgIGlmICghcHJpbWVOdW1iZXIucHJpbWVOdW1iZXIpIHtcbiAgICAgICAgICBwcmltZU51bWJlci5wcmltZU51bWJlciA9IG5ldyBwcmltZU51bWJlcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmltZU51bWJlci5wcmltZU51bWJlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZXZ1ZWx2ZSB1biBhcnJheSBjb24gbG9zIHByaW1lcm9zIG7Dum1lcm9zIHByaW1vcyBoYXN0YSBtYXhcbiAgICAgKiBAcGFyYW0gbWF4IFxuICAgICAqIEByZXR1cm5zIFxuICAgICAqL1xuICAgIHB1YmxpYyBmaXJzdFByaW1lcyhtYXg6IG51bWJlcik6IG51bWJlcltdIHtcbiAgICAgICAgbGV0IHJlc3VsdDogbnVtYmVyW10gPSBbXTtcblxuICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAyOyBpIDwgbWF4OyArK2kpIHtcblxuICAgICAgICAgICAgbGV0IGlzUHJpbWU6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDI7IGogPCBpOyArK2opIHtcbiAgICAgICAgICAgICAgICBpZiAoaSAlIGogPT09IDApe1xuICAgICAgICAgICAgICAgICAgICBpc1ByaW1lID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZihpc1ByaW1lKSAgcmVzdWx0LnB1c2goaSk7IFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRGV2dWVsdmUgdW4gYXJyYXkgY29uIGxvcyBuw7ptZXJvcyBwcmltb3MgZW50cmUgbWluIHkgbWF4XG4gICAgICogQHBhcmFtIG1pbiBcbiAgICAgKiBAcGFyYW0gbWF4IFxuICAgICAqIEByZXR1cm5zIFxuICAgICAqL1xuICAgIHB1YmxpYyByYW5nZShtaW46IG51bWJlciwgbWF4OiBudW1iZXIpIHtcbiAgICAgICAgbGV0IHJlc3VsdDogbnVtYmVyW10gPSBbXTtcblxuICAgICAgICBpZiAobWluIDwgMikgbWluID0gMjtcblxuICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSBtaW47IGkgPCBtYXg7ICsraSkge1xuXG4gICAgICAgICAgICBsZXQgaXNQcmltZTogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMjsgaiA8IGk7ICsraikge1xuICAgICAgICAgICAgICAgIGlmIChpICUgaiA9PT0gMCl7XG4gICAgICAgICAgICAgICAgICAgIGlzUHJpbWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKGlzUHJpbWUpICByZXN1bHQucHVzaChpKTsgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG4iXX0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Iml4T0FnQk87Mk5BaEJQOztHQUdBLEtBQWFBLFlBQVcsQ0FJcEI7O09BR0FDLHFDQUF3QixDQUV4Qjs7OztPQUs0QixNQUFkQyxlQUFjLGlEQUN4QixHQUFJLENBQUNGLFdBQVcsQ0FBQ0EsV0FBakIsQ0FBOEIsa0RBQzVCQSxXQUFXLENBQUNBLFdBQVosQ0FBMEIsR0FBSUEsWUFBSixFQUExQixDQUNELENBRkQsZ0NBRHdCLHVCQUl4QixNQUFPQSxZQUFXLENBQUNBLFdBQW5CLENBQ0gsQ0FFRDs7OztPQUtPRyxXQUFXLENBQUNDLEdBQUQsQ0FBWSx3QkFDMUIsR0FBSUMsT0FBTSx5QkFBYSxFQUFiLENBQVYsQ0FEMEIsdUJBRzFCLElBQUssR0FBSUMsRUFBQyx5QkFBVyxDQUFYLENBQVYsQ0FBd0JBLENBQUMsQ0FBR0YsR0FBNUIsQ0FBaUMsRUFBRUUsQ0FBbkMsQ0FBc0MsQ0FFbEMsR0FBSUMsUUFBTyx5QkFBWSxJQUFaLENBQVgsQ0FGa0MsdUJBR2xDLElBQUssR0FBSUMsRUFBQywwQkFBRyxDQUFILENBQVYsQ0FBZ0JBLENBQUMsQ0FBR0YsQ0FBcEIsQ0FBdUIsRUFBRUUsQ0FBekIsQ0FBNEIseUJBQ3hCLEdBQUlGLENBQUMsQ0FBR0UsQ0FBSixHQUFVLENBQWQsQ0FBZ0IsbURBQ1pELE9BQU8sQ0FBRyxLQUFWLENBQ0gsQ0FGRCxnQ0FHSCxDQVBpQyx3QkFTbEMsR0FBR0EsT0FBSCxDQUFhLHlEQUFNLENBQUNFLElBQVAsQ0FBWUgsQ0FBWixFQUFlLENBQTVCLGdDQUNILENBYnlCLHdCQWMxQixNQUFPRCxPQUFQLENBQ0gsQ0FFRDs7Ozs7T0FNT0ssS0FBSyxDQUFDQyxHQUFELENBQWNQLEdBQWQsQ0FBeUIsd0JBQ2pDLEdBQUlDLE9BQU0sMEJBQWEsRUFBYixDQUFWLENBRGlDLHdCQUdqQyxHQUFJTSxHQUFHLENBQUcsQ0FBVixDQUFhLHNEQUFHLENBQUcsQ0FBTixDQUFRLENBQXJCLGdDQUhpQyx3QkFLakMsSUFBSyxHQUFJTCxFQUFDLDBCQUFXSyxHQUFYLENBQVYsQ0FBMEJMLENBQUMsQ0FBR0YsR0FBOUIsQ0FBbUMsRUFBRUUsQ0FBckMsQ0FBd0MsQ0FFcEMsR0FBSUMsUUFBTywwQkFBWSxJQUFaLENBQVgsQ0FGb0Msd0JBR3BDLElBQUssR0FBSUMsRUFBQywwQkFBRyxDQUFILENBQVYsQ0FBZ0JBLENBQUMsQ0FBR0YsQ0FBcEIsQ0FBdUIsRUFBRUUsQ0FBekIsQ0FBNEIseUJBQ3hCLEdBQUlGLENBQUMsQ0FBR0UsQ0FBSixHQUFVLENBQWQsQ0FBZ0IsbURBQ1pELE9BQU8sQ0FBRyxLQUFWLENBQ0gsQ0FGRCxnQ0FHSCxDQVBtQyx3QkFTcEMsR0FBR0EsT0FBSCxDQUFhLHlEQUFNLENBQUNFLElBQVAsQ0FBWUgsQ0FBWixFQUFlLENBQTVCLGdDQUNILENBZmdDLHdCQWdCakMsTUFBT0QsT0FBUCxDQUNILENBbEVtQixDLHdCQUF4Qk8iLCJuYW1lcyI6WyJwcmltZU51bWJlciIsImNvbnN0cnVjdG9yIiwiZ2V0UHJpbWVOdW1iZXIiLCJmaXJzdFByaW1lcyIsIm1heCIsInJlc3VsdCIsImkiLCJpc1ByaW1lIiwiaiIsInB1c2giLCJyYW5nZSIsIm1pbiIsImV4cG9ydHMiXSwic291cmNlcyI6WyIvaG9tZS91c3VhcmlvL21vZGlmaWNhY2ktblBFMTAyLTI4LTAzL3NyYy9wcmltZU51bWJlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENsYXNlIHBhcmEgbWFuZWphciBuw7ptZXJvcyBwcmltb3NcbiAqL1xuZXhwb3J0IGNsYXNzIHByaW1lTnVtYmVyIHtcblxuICAgIHByaXZhdGUgc3RhdGljIHByaW1lTnVtYmVyOiBwcmltZU51bWJlcjtcbiAgICBcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RvciBwcml2YWRvIHBhcmEgc2VndWlyIGVsIHBhdHLDs24gc2luZ2xldG9uXG4gICAgICovXG4gICAgcHJpdmF0ZSBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgICAvKipcbiAgICAgKiBTaSBsYSBjbGFzZSBhdW4gbm8gc2UgaGEgaW5zdGFuY2lhZG8sIHNlIGxsYW1hIGFsIGNvbnN0cnVjdG9yLCBzaSBubyBzZSBkZXZ1ZWx2ZVxuICAgICAqIGxhIGluc3RhbmNpYSB5YSBjcmVhZGEgcGFyYSBwcmVzZXJ2YXIgZWwgcGF0csOzbiBzaW5nbGV0b25cbiAgICAgKiBAcmV0dXJucyBcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldFByaW1lTnVtYmVyKCk6IHByaW1lTnVtYmVyIHtcbiAgICAgICAgaWYgKCFwcmltZU51bWJlci5wcmltZU51bWJlcikge1xuICAgICAgICAgIHByaW1lTnVtYmVyLnByaW1lTnVtYmVyID0gbmV3IHByaW1lTnVtYmVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHByaW1lTnVtYmVyLnByaW1lTnVtYmVyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERldnVlbHZlIHVuIGFycmF5IGNvbiBsb3MgcHJpbWVyb3MgbsO6bWVyb3MgcHJpbW9zIGhhc3RhIG1heFxuICAgICAqIEBwYXJhbSBtYXggXG4gICAgICogQHJldHVybnMgXG4gICAgICovXG4gICAgcHVibGljIGZpcnN0UHJpbWVzKG1heDogbnVtYmVyKTogbnVtYmVyW10ge1xuICAgICAgICBsZXQgcmVzdWx0OiBudW1iZXJbXSA9IFtdO1xuXG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDI7IGkgPCBtYXg7ICsraSkge1xuXG4gICAgICAgICAgICBsZXQgaXNQcmltZTogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMjsgaiA8IGk7ICsraikge1xuICAgICAgICAgICAgICAgIGlmIChpICUgaiA9PT0gMCl7XG4gICAgICAgICAgICAgICAgICAgIGlzUHJpbWUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmKGlzUHJpbWUpICByZXN1bHQucHVzaChpKTsgXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBEZXZ1ZWx2ZSB1biBhcnJheSBjb24gbG9zIG7Dum1lcm9zIHByaW1vcyBlbnRyZSBtaW4geSBtYXhcbiAgICAgKiBAcGFyYW0gbWluIFxuICAgICAqIEBwYXJhbSBtYXggXG4gICAgICogQHJldHVybnMgXG4gICAgICovXG4gICAgcHVibGljIHJhbmdlKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikge1xuICAgICAgICBsZXQgcmVzdWx0OiBudW1iZXJbXSA9IFtdO1xuXG4gICAgICAgIGlmIChtaW4gPCAyKSBtaW4gPSAyO1xuXG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IG1pbjsgaSA8IG1heDsgKytpKSB7XG5cbiAgICAgICAgICAgIGxldCBpc1ByaW1lOiBib29sZWFuID0gdHJ1ZTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAyOyBqIDwgaTsgKytqKSB7XG4gICAgICAgICAgICAgICAgaWYgKGkgJSBqID09PSAwKXtcbiAgICAgICAgICAgICAgICAgICAgaXNQcmltZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYoaXNQcmltZSkgIHJlc3VsdC5wdXNoKGkpOyBcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cbiJdfQ==