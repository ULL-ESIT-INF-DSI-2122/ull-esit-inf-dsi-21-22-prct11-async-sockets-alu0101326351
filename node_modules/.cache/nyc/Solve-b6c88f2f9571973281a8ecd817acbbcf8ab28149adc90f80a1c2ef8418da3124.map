{"version":3,"file":"/home/usuario/modificaci-nPE102-28-03/src/Solve.ts","sources":["/home/usuario/modificaci-nPE102-28-03/src/Solve.ts"],"names":[],"mappings":";;;AAQI;;GAEG;AACH,MAAa,MAAM;IACf;;;;OAIG;IACH,YAAoB,IAAc,EAAU,QAAkB;QAA1C,SAAI,GAAJ,IAAI,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAElE;;;OAGG;IACH,KAAK;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5C,CAAC;CACJ;AAfD,wBAeC","sourcesContent":["    \n    /**\n     * Interfaz que declara el método execute donde se implementará el algoritmo de ordenación\n     */\n    export interface Strategy {\n        execute(data: number[]): number[];\n    }\n    \n    /**\n     * Clase que donde se declara el array que se quiere ordenar y el algoritmo\n     */\n    export class Solver {\n        /**\n         * Recibe el array y la estrategia de resolución\n         * @param data \n         * @param strategy \n         */\n        constructor(private data: number[], private strategy: Strategy) {}\n    \n        /**\n         * Devuelve el array ordenado mediante la ordenación indicada\n         * @returns \n         */\n        logic(): number[] {\n            return this.strategy.execute(this.data);\n        }\n    }\n"]}