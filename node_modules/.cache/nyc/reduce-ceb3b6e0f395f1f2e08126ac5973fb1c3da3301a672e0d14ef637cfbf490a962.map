{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101326351/src/reduce.ts","sources":["/home/usuario/ull-esit-inf-dsi-21-22-prct09-filesystem-notes-app-alu0101326351/src/reduce.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAsB,MAAM;IAExB;;;OAGG;IACH,YACc,KAAe;QAAf,UAAK,GAAL,KAAK,CAAU;IAC3B,CAAC;IAEH;;;OAGG;IACI,GAAG;QACN,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,GAAW,IAAI,CAAC,MAAM,EAAE,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,CAAC;IAEb,CAAC;IAOD;;OAEG;IACO,MAAM,KAAI,CAAC;IAAA,CAAC;IAEtB;;OAEG;IACO,KAAK,KAAI,CAAC;IAAA,CAAC;CACxB;AApCD,wBAoCC;AAAA,CAAC","sourcesContent":["/**\n * Clase abstracta Reduce\n */\nexport abstract class Reduce {\n\n    /**\n     * Constructor recibe un array de números\n     * @param array \n     */\n    constructor(\n        protected array: number[],\n    ){}\n\n    /**\n     * Ejecuta el algoritmo\n     * @returns \n     */\n    public run(): number {\n        this.before();\n        let n: number = this.reduce();\n        this.after();\n        return n;\n\n    }\n\n    /**\n     * Llama a la implementación del método reduce en las clases hijas\n     */\n    abstract reduce(): number;\n\n    /**\n     * Notifica que se empieza el algoritmo. Se implementa opcionalmente en las clases hijas\n     */\n    protected before() {};\n\n    /**\n     * Notifica que se empieza el algoritmo. Se implementa opcionalmente en las clases hijas\n     */\n    protected after() {};\n};"]}